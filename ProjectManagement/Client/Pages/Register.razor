@page "/register"
@using ProjectManagement.Shared;
@using ProjectManagement.Client.Services;
@layout AuthLayout
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider
<h1 class="h2 font-weight-normal login-title">
    Регистрация
</h1>
<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="registerRequest">
    <DataAnnotationsValidator />
    <label for="inputLogin" class="sr-only">Login</label>
    <InputText id="inputLogin" class="form-control mb-2" placeholder="Login" autofocus @bind-Value="@registerRequest.Login" />
    <ValidationMessage For="@(() => registerRequest.Login)" />

    <label for="inputFirstName" class="sr-only">Имя</label>
    <InputText id="inputFirstName" class="form-control mb-2" placeholder="Имя" autofocus @bind-Value="@registerRequest.FirstName" />
    <ValidationMessage For="@(() => registerRequest.FirstName)" />

    <label for="inputLastName" class="sr-only">Фамилия</label>
    <InputText id="inputLastName" class="form-control mb-2" placeholder="Фамилия" autofocus @bind-Value="@registerRequest.LastName" />
    <ValidationMessage For="@(() => registerRequest.LastName)" />

    <label for="inputRole" class="sr-only">Роль</label>
    <InputText id="inputRole" class="form-control mb-2" placeholder="Роль" autofocus @bind-Value="@registerRequest.Role" />
    <ValidationMessage For="@(() => registerRequest.Role)" />

    <label for="inputTelegramChatId" class="sr-only">ТелеграмId</label>
    <InputText id="inputTelegramChatId" class="form-control mb-2" placeholder="ТелеграмId" autofocus @bind-Value="@registerRequest.TelegramChatId" />
    <ValidationMessage For="@(() => registerRequest.TelegramChatId)" />

    <label for="inputPassword" class="sr-only">Пароль</label>
    <InputText type="password" id="inputPassword" class="form-control mb-2" placeholder="Пароль" @bind-Value="@registerRequest.Password" />
    <ValidationMessage For="@(() => registerRequest.Password)" />

    <label for="inputPasswordConfirm" class="sr-only">Подтверждение пароля</label>
    <InputText type="password" id="inputPasswordConfirm" class="form-control mb-2" placeholder="Подтверждение пароля" @bind-Value="@registerRequest.PasswordConfirm" />
    <ValidationMessage For="@(() => registerRequest.PasswordConfirm)" />
    
    <button class="btn btn-lg btn-primary btn-block" type="submit">Создать аккаунт</button>
    <label class="text-danger">@error</label>
    <NavLink href="login">
        <h6 class="font-weight-normal text-center">Уже есть аккаунт?</h6>
    </NavLink>
</EditForm>
@functions {
    RegisterRequest registerRequest { get; set; } = new RegisterRequest();
    string error { get; set; }
    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Register(registerRequest);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}